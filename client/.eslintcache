[{"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/index.tsx":"1","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/reportWebVitals.ts":"2","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/App.tsx":"3","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/pages/main.tsx":"4","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/components/Dialog/index.tsx":"5","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/state.ts":"6","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/pages/room.tsx":"7","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/img/NotVotedIcon.tsx":"8","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/img/VotedIcon.tsx":"9","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/utilities.tsx":"10"},{"size":756,"mtime":1608667001830,"results":"11","hashOfConfig":"12"},{"size":416,"mtime":1608558514619,"results":"13","hashOfConfig":"12"},{"size":4119,"mtime":1610284319093,"results":"14","hashOfConfig":"12"},{"size":6468,"mtime":1610192457321,"results":"15","hashOfConfig":"12"},{"size":656,"mtime":1608667001818,"results":"16","hashOfConfig":"12"},{"size":1024,"mtime":1610284302866,"results":"17","hashOfConfig":"12"},{"size":9331,"mtime":1610284747385,"results":"18","hashOfConfig":"12"},{"size":1357,"mtime":1608817338864,"results":"19","hashOfConfig":"12"},{"size":919,"mtime":1608669748950,"results":"20","hashOfConfig":"12"},{"size":279,"mtime":1608670860316,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"qimc3g",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/index.tsx",[],["44","45"],"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/reportWebVitals.ts",[],"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/App.tsx",[],"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/pages/main.tsx",["46"],"import { useEffect, useState } from \"react\"\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n} from \"@material-ui/core\"\nimport Dialog from \"../components/Dialog\"\nimport GithubLogo from \"../img/github.png\"\nimport { SocketState, UserState } from \"../state\"\nimport { useRecoilState, useRecoilValue } from \"recoil\"\n\nconst Main = () => {\n  const [createRoomDialog, setCreateRoomDialog] = useState<boolean>(false)\n  const [joinRoomDialog, setJoinRoomDialog] = useState<boolean>(false)\n  const [user, setUser] = useRecoilState(UserState)\n  const socket = useRecoilValue(SocketState)\n\n  const handleClose = () => {\n    setCreateRoomDialog(false)\n    setJoinRoomDialog(false)\n  }\n\n  const createRoom = () => {\n    socket.emit(\"create-room\", user)\n  }\n\n  const joinRoom = () => {\n    socket.emit(\"join-room\", user)\n  }\n\n  return (\n    <>\n      <header>\n        <div id=\"logo\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"71.332\" height=\"54.052\" viewBox=\"0 0 71.332 54.052\">\n            <g id=\"Group_90\" data-name=\"Group 90\" transform=\"translate(-76.409 -80)\">\n              <g id=\"Group_89\" data-name=\"Group 89\" transform=\"matrix(0.966, -0.259, 0.259, 0.966, 76.409, 88.176)\">\n                <g id=\"Rectangle_4\" data-name=\"Rectangle 4\" transform=\"translate(0 0)\" fill=\"#fff\" stroke=\"#000\" strokeWidth=\"3\">\n                  <rect width=\"31.549\" height=\"47.323\" rx=\"5\" stroke=\"none\"/>\n                  <rect x=\"1.5\" y=\"1.5\" width=\"28.549\" height=\"44.323\" rx=\"3.5\" fill=\"none\"/>\n                </g>\n                <text id=\"モ_レ\" data-name=\"モ\n          レ\" transform=\"translate(9.473 19.242)\" fontSize=\"13\" fontFamily=\"PingFangSC-Semibold, PingFang SC\" fontWeight=\"600\"><tspan x=\"0\" y=\"0\">モ</tspan><tspan y=\"0\" fontFamily=\"Quicksand-Bold, Quicksand\" fontWeight=\"700\"></tspan><tspan x=\"0\" y=\"18\">レ</tspan></text>\n              </g>\n              <g id=\"Group_88\" data-name=\"Group 88\" transform=\"matrix(0.966, 0.259, -0.259, 0.966, 117.167, 80)\">\n                <g id=\"Rectangle_4-2\" data-name=\"Rectangle 4\" transform=\"translate(0)\" fill=\"#fff\" stroke=\"#000\" strokeWidth=\"3\">\n                  <rect width=\"31.652\" height=\"47.478\" rx=\"5\" stroke=\"none\"/>\n                  <rect x=\"1.5\" y=\"1.5\" width=\"28.652\" height=\"44.478\" rx=\"3.5\" fill=\"none\"/>\n                </g>\n                <text id=\"ミ_ツ\" data-name=\"ミ\n          ツ\" transform=\"translate(9.283 19.949)\" fontSize=\"13\" fontFamily=\"PingFangSC-Semibold, PingFang SC\" fontWeight=\"600\"><tspan x=\"0\" y=\"0\">ミ</tspan><tspan y=\"0\" fontFamily=\"Quicksand-Bold, Quicksand\" fontWeight=\"700\"></tspan><tspan x=\"0\" y=\"18\">ツ</tspan></text>\n              </g>\n            </g>\n          </svg>\n        </div>\n        <h1 id=\"name\">mitsumori</h1>\n      </header>\n      <main>\n        <h1 id=\"cta\">Play online scrum poker with your team</h1>\n        <div id=\"actions\">\n          <Button\n            disableElevation\n            variant=\"contained\"\n            onClick={() => setCreateRoomDialog(true)}\n          >\n            Create a room\n          </Button>\n          <Button variant=\"outlined\" onClick={() => setJoinRoomDialog(true)}>\n            Join a room\n          </Button>\n        </div>\n      </main>\n      <footer>\n        <a href=\"https://github.com/UNRULYEON/mitsumori\">\n          <img\n            src={GithubLogo}\n            id=\"footer-github-logo\"\n            alt=\"repository-of-mitsumori\"\n          />\n        </a>\n      </footer>\n      <Dialog\n        open={createRoomDialog}\n        onClose={handleClose}\n        content={() => (\n          <>\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              value={user.name}\n              onChange={(e) => {\n                localStorage.setItem(\"name\", e.target.value)\n                setUser({ ...user, name: e.target.value })\n              }}\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color=\"primary\"\n                  checked={user.is_observer}\n                  onChange={(e) => {\n                    localStorage.setItem(\n                      \"is_observer\",\n                      String(e.target.checked)\n                    )\n                    setUser({ ...user, is_observer: e.target.checked })\n                  }}\n                  name=\"I'm an observer\"\n                />\n              }\n              label=\"I'm an observer\"\n            />\n          </>\n        )}\n        actions={({ onClose }) => (\n          <>\n            <Button fullWidth onClick={onClose} variant=\"text\">\n              Cancel\n            </Button>\n            <Button\n              fullWidth\n              disableElevation\n              onClick={createRoom}\n              variant=\"contained\"\n            >\n              Create\n            </Button>\n          </>\n        )}\n      />\n      <Dialog\n        open={joinRoomDialog}\n        onClose={handleClose}\n        content={() => (\n          <>\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              value={user.name}\n              onChange={(e) => {\n                localStorage.setItem(\"name\", e.target.value)\n                setUser({ ...user, name: e.target.value })\n              }}\n            />\n            <TextField\n              label=\"Room code\"\n              variant=\"outlined\"\n              value={user.room_code}\n              onChange={(e) => setUser({ ...user, room_code: e.target.value })}\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color=\"primary\"\n                  checked={user.is_observer}\n                  onChange={(e) => {\n                    localStorage.setItem(\n                      \"is_observer\",\n                      String(e.target.checked)\n                    )\n                    setUser({ ...user, is_observer: e.target.checked })\n                  }}\n                  name=\"I'm an observer\"\n                />\n              }\n              label=\"I'm an observer\"\n            />\n          </>\n        )}\n        actions={({ onClose }) => (\n          <>\n            <Button fullWidth onClick={onClose} variant=\"text\">\n              Cancel\n            </Button>\n            <Button\n              fullWidth\n              disableElevation\n              onClick={joinRoom}\n              variant=\"contained\"\n            >\n              Join\n            </Button>\n          </>\n        )}\n      />\n    </>\n  )\n}\n\nexport default Main\n","/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/components/Dialog/index.tsx",[],"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/state.ts",[],"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/pages/room.tsx",["47","48"],"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/img/NotVotedIcon.tsx",[],"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/img/VotedIcon.tsx",[],"/Users/amarkisoensingh/projects/amar.sh/mitsumori/client/src/utilities.tsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":19},{"ruleId":"53","severity":1,"message":"57","line":12,"column":10,"nodeType":"55","messageId":"56","endLine":12,"endColumn":21},{"ruleId":"58","severity":1,"message":"59","line":180,"column":62,"nodeType":"60","endLine":180,"endColumn":64},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSnackbar' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","no-global-assign","no-unsafe-negation"]